from telethon import TelegramClient, events, Button as button
from telethon.tl.types import InputPhoneContact
import sqlite3
from os import getenv


api_id = getenv("api_id")
api_hash = getenv("api_hash")
bot_token = getenv("bot_token")


client = TelegramClient('bot_session', api_id, api_hash).start(bot_token=bot_token)


@client.on(events.NewMessage(pattern='/start'))
async def start_handler(event):
    reply_buttons = [
        [button.text("Co—Ü-–º–µ—Ä–µ–∂–∏", resize=True)],
        [button.text("–ê–¥—Ä–µ—Å–∏", resize=True)],
        [button.text("–ü—Ä–∞–π—Å-–ª—ñ—Å—Ç", resize=True)]
    ]
    await event.respond("–ü—Ä–∏–≤—ñ—Ç, —è –±–æ—Ç Rio Fitness Club ü§ñ", buttons = reply_buttons)

@client.on(events.NewMessage(pattern="Co—Ü-–º–µ—Ä–µ–∂–∏"))
async def send_social_networks(event):
    all_social_networks = [
                [button.inline("–Ü–Ω—Å—Ç–∞–≥—Ä–∞–º", b"instagram")],
                [button.inline("–§–µ–π—Å–±—É–∫", b"facebook")],
                [button.inline("–¢—ñ–∫-–¢–æ–∫", b"tiktok")]
    ]
    await event.respond("–¢—ñ–ª—å–∫–∏ –ø—ñ–¥–ø–∏—à–∏—Å—å ü•á",buttons = all_social_networks)

@client.on(events.CallbackQuery)
async def enter_social_link(event):
    if event.data == b"instagram":
        await event.respond("–û—Å—å –≤—Å—ñ –Ω–∞—à—ñ –∞–∫–∞—É–Ω—Ç–∏ ->")
        rio_fitness_btn = [button.url("–ö–ª—ñ–∫", "https://www.instagram.com/rio_fitness_club")]
        await event.respond("–ù–∞—à –Ü–Ω—Å—Ç–∞–≥—Ä–∞–º", buttons = rio_fitness_btn)
        rio_school_btn = [button.url("–ö–ª—ñ–∫", "https://www.instagram.com/rioschool")]
        await event.respond("–¢–∞–∫–æ–∂ –º–æ–∂–µ—à –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –Ω–∞—à–æ—ó rioschool", buttons=rio_school_btn)

    elif event.data == b"facebook":
        await event.respond("–ù–∞—à Facebook")
        rio_facebook_btn = [button.url("–ñ–º–∞–∫", "https://www.facebook.com/FitnessRioClub")]
        await event.respond("–ó–∞–ª—ñ—Ç–∞–π ->", buttons = rio_facebook_btn)

    elif event.data == b"tiktok":
        await event.respond("Tik - Tok –∞–∫–∞—É–Ω—Ç")
        rio_tiktok_btn = [button.url("–ù–∞–∂–º–∏ –º–µ–Ω–µ", "https://www.tiktok.com/@rio_fitness_club0")]
        await event.respond("–ü–æ–≥—Ä–æ—Ç–∞–π –ù–∞—à –¢—ñ–∫-–¢–æ–∫", buttons = rio_tiktok_btn)



@client.on(events.NewMessage(pattern="–ê–¥—Ä–µ—Å–∏"))
async def send_addresses(event):
    all_addresses = [
        [button.inline("–†—ñ–æ –§—ñ—Ç–Ω–µ—Å - 1", b"rio_1")],
        [button.inline("–†—ñ–æ –§—ñ—Ç–Ω–µ—Å - 2", b"rio_2")],
        [button.inline("–†—ñ–æ –§—ñ—Ç–Ω–µ—Å - 3", b"rio_3")],
        [button.inline("–†—ñ–æ –§—ñ—Ç–Ω–µ—Å - 4", b"rio_4")],
        [button.inline("–†—ñ–æ –§—ñ—Ç–Ω–µ—Å - 5", b"rio_5")],
        [button.inline("–†—ñ–æ –§—ñ—Ç–Ω–µ—Å - 6", b"rio_6")]
    ]
    await event.respond("–í–∏–±–µ—Ä–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É –∞–¥—Ä–µ—Å—É: ", buttons = all_addresses)


contact = InputPhoneContact(
        client_id=0,
        phone= '0639658039',
        first_name= "Rio Number",
        last_name= None
    )
@client.on(events.CallbackQuery)
async def enter_data_club(event):

    if event.data == b'rio_1':
        await event.respond("‚Ä¢ Rio Fitness Club ‚Ññ1\n‚Ä¢–ê–¥—Ä–µ—Å–∞ - –≤—É–ª–∏—Ü—è –ö–æ—Å–º–æ–Ω–∞–≤—Ç—ñ–≤, 62/2, –û–¥–µ—Å–∞, –û–¥–µ—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å, 65000\n‚Ä¢ –†–æ–∑–∫–ª–∞–¥ –ü–Ω - –°–± : 08.00 : 22.00")
        await event.respond('–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä', contact)


async def main():
    await client.start()
    await client.run_until_disconnected()

if __name__ == '__main__':
    client.loop.run_until_complete(main())